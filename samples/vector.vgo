package vectops

func NormFloat32s(out, x, y []float32) {
	out = x*x + y*y
}

func AddUints(out, in1, in2 []uint) {
	out = in1 + in2
}

func SomeFormula(out, x, y, z []float32) {
	out = (x*y + y*z + z*x) / (x*x + y*y + z*z)
}

func subByte(out, a, b []byte) {
	out = a - b
}

func Diff(a []byte) []byte {
	result := make([]byte, len(a)-1)
	subByte(result, a[1:], a[:len(a)-1])
	return result
}

func subuint(out, a, b []uint) {
	out = a - b
}

func DiffInt(a []uint) []uint {
	result := make([]uint, len(a)-1)
	subuint(result, a[:len(a)-1], a[1:])
	return result
}

// vim: set ft=go:
